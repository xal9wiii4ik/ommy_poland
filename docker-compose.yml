version: '3.7'

services:
  web:
    restart: always
    build: .
    entrypoint: ./entrypoints/web_entrypoint.sh
    volumes:
      - ./static_volume/:/staticfiles
      - ./media_volume/:/mediafiles
      - ./app/:/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db

#  bot:
#    restart: always
#    build: .
#    command: python manage.py run_bot
#    volumes:
#      - ./static_volume/:/staticfiles
#      - ./media_volume/:/mediafiles
#      - ./app/:/app/
#    env_file:
#      - ./.env
#    depends_on:
#      - web

  celery_worker:
    build: .
    command: celery -A ommy_polland worker -l info
    links:
      - redis
    volumes:
      - ./static_volume/:/staticfiles
      - ./media_volume/:/mediafiles
      - ./app/:/app/
    env_file:
      - ./.env
    depends_on:
      - web
      - db
#      - bot
      - redis

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db

  redis:
    image: redis:alpine
#  nginx:
#    image: nginx:1.17
#    restart: unless-stopped
#    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - static_volume:/staticfiles
#      - media_volume/:/mediafiles
#      - ./data/nginx:/etc/nginx/conf.d
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
#      - ./check/certbot/conf:/etc/check/letsencrypt
#      - ./check/certbot/www:/var/check/www/certbot
#    depends_on:
#      - web


volumes:
  static_volume:
  media_volume:
  postgres_data:
